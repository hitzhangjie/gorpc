# ========================================================================================================
# BASH SHELL CONFIG
# ========================================================================================================

# bash inherite
if [ -f /etc/bashrc ]; then
    . /etc/bashrc
fi

export BASH_SILENCE_DEPRECATION_WARNING=1
export LC_ALL=en_US.UTF-8

# zsh like completion: https://superuser.com/questions/288714/bash-autocomplete-like-zsh
bind 'set show-all-if-ambiguous on'
bind 'set completion-ignore-case on'
bind 'set colored-completion-prefix on'
#bind 'TAB:menu-complete'

# bash history
HISTCONTROL=ignoreboth                      # remove duplicate lines or lines start with space
HISTSIZE=1000                               # set the history length
HISTFILESIZE=2000                           # 

shopt -s histappend                         # append to the history file, don't overwrite it

shopt -s dotglob                            # pathname expansion
                                            # includes filename starts with '.' when pathname expansion. 

#shopt -s globstar                          # pattern "**" in pathname expansion context will match all
                                            # files and zero or more directories and subdirectories.
                                            
shopt -s checkwinsize                       # window resize
                                            # update the values of LINES and COLUMNS when resizing

[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"  # less, more friendly for non-text input

# bash autocomplete
if [ -f /etc/profile.d/bash_completion.sh ]; then
    . /etc/profile.d/bash_completion.sh
fi

# bash color
export MAGENTA='\e[0;31m'
export GREEN='\e[0;32m'
export ORANGE='\e[1;33m'
export BLUE='\e[0;34m'
export PURPLE='\e[0;35m'
export WHITE='\e[0;37m'
export RESET='\e[0m'

function git_color {
  local git_status="$(git status 2> /dev/null)"

  if [[ ! $git_status =~ "working directory clean" ]]; then
    echo -e $MAGENTA
  elif [[ $git_status =~ "Your branch is ahead of" ]]; then
    echo -e $ORANGE
  elif [[ $git_status =~ "nothing to commit" ]]; then
    echo -e $GREEN
  else
    echo -e $PURPLE
  fi
}

function git_branch {
  local git_status="$(git status 2> /dev/null)"
  local on_branch="On branch ([^${IFS}]*)"
  local on_branch_zh="位于分支 ([^${IFS}]*)"
  local on_commit="HEAD detached at ([^${IFS}]*)"

  if [[ $git_status =~ $on_branch ]]; then
    local branch=${BASH_REMATCH[1]}
    echo "($branch)"
  elif [[ $git_status =~ $on_branch_zh ]]; then
    local branch=${BASH_REMATCH[1]}
    echo "($branch)"
  elif [[ $git_status =~ $on_commit ]]; then
    local commit=${BASH_REMATCH[1]}
    echo "($commit)"
  fi
}

export PS1="\[$PURPLE\]\u\[$GREEN\]@\[$ORANGE\]\h \[$BLUE\]\W\[\$(git_color)\]\$(git_branch) \[$WHITE\]\$\[$RESET\] "
export PS2="\[$ORANGE\]→ \[$RESET\]"

# bash common
alias ls='ls --color -p'                    # list, -p for directory
alias ll='ls --color -alp'                  #       --color for colorizing
#alias ls='ls -G -p'                    # list, -p for directory
#alias ll='ls -G -alp'                  #       --color for colorizing
alias grep='grep --color=auto'              # grep
alias less='less -R'                        # less, -R to consume color conf
alias more='more -R'                        # more, -R to consume color conf

# svn
export SVN_EDITOR=vim                       # svn editor

# ========================================================================================================
# Development
# ========================================================================================================

alias ee='exit'                                         # exit current shell
alias rr='reset'                                        # reset terminal
alias duu='du -hx --all --max-depth=1 | sort -rh'       # list files space usage
alias tree='tree -N'
alias t='tree'                                          # list directorie hierarchy

# golang
#export GOPROXY='https://goproxy.cn'
export GOPATH="/root/go"
export PATH=$PATH:$GOPATH/bin

# c/c++
alias gcc="gcc"
alias g++="g++ -std=c++11 -Wall -Wextra -Wshadow -Wnon-virtual-dtor -Wold-style-cast -Wcast-align -Wunused \
           -Woverloaded-virtual -pedantic -Wconversion -Wsign-conversion"
alias indent='indent -st -bap -bli0 -i4 -l79 -ncs -npcs -npsl -fca -lc79 -fc1 -ts4'

alias gentags-c='ctags --c-kinds=+dfglm --language-force=C -R .'
alias gentags-cpp='ctags --c++-kinds=+dfglm --language-force=C++ -R .'

# encoding 
alias chardet='/usr/local/bin/uchardet'                 # character encoding detect

